name: PR & Version Bump

on:
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: pr-bump-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  test:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (merge commit is fine for tests)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e . pytest
      - name: Run tests
        run: pytest -q

  bump-version:
    name: Bump version on PR head branch (no tags)
    needs: test
    if: ${{ github.event.pull_request.draft == false && !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # 1) Checkout the PR HEAD branch (pushable), not refs/pull/*/merge
      - name: Checkout PR head branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          persist-credentials: true

      - name: Debug ref
        run: |
          echo "HEAD ref: $(git rev-parse --abbrev-ref --symbolic-full-name HEAD)"
          git remote -v

      - name: Set git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"

      - name: Install bump-my-version
        run: pip install "bump-my-version==1.2.3"

      # Guard against re-bumping in loops: skip if the last commit is our CI bump
      - name: Guard - skip if already bumped by CI
        id: guard
        run: |
          if git log -1 --pretty=%B | grep -qi '\[ci bump\]'; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      # 2) Run the bump locally (no tag), capture versions
      - name: Bump version (patch, no tag)
        id: bump
        if: steps.guard.outputs.skip != 'true'
        run: |
          set -euo pipefail
          prev="$(bump-my-version show current_version)"
          echo "previous-version=${prev}" >> "$GITHUB_OUTPUT"

          bump-my-version bump patch --no-tag

          curr="$(bump-my-version show current_version)"
          echo "current-version=${curr}" >> "$GITHUB_OUTPUT"

          if [ "$prev" != "$curr" ]; then
            echo "bumped=true" >> "$GITHUB_OUTPUT"
          else
            echo "bumped=false" >> "$GITHUB_OUTPUT"
          fi

          # If the tool didn't auto-commit, commit changes ourselves
          if ! git diff --quiet --staged || ! git diff --quiet; then
            git add -A
            git commit -m "chore: bump version: ${prev} → ${curr} [ci bump]"
          fi

      # 3) Push to the PR head branch explicitly (never to refs/pull/*/merge)
      - name: Push bump commit to PR head
        if: steps.guard.outputs.skip != 'true' && steps.bump.outputs.bumped == 'true'
        run: |
          git push origin "HEAD:refs/heads/${{ github.event.pull_request.head.ref }}"

      - name: Comment on PR with new version
        if: steps.guard.outputs.skip != 'true' && steps.bump.outputs.bumped == 'true'
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        env:
          PREV: ${{ steps.bump.outputs.previous-version }}
          CURR: ${{ steps.bump.outputs.current-version }}
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `✅ Version bumped from \`${process.env.PREV}\` to \`${process.env.CURR}\` on this PR branch.`
            });
