name: PR CI & Version Bump

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: pr-bump-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  test:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (PR merge commit is fine for tests)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e . pytest

      - name: Run tests
        run: pytest -q

  bump-version:
    name: Bump project version on PR head branch (no tags)
    needs: test
    if: ${{ github.event.pull_request.draft == false && !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    permissions:
      contents: write        # needed to push to the PR branch
      pull-requests: write   # to post a comment
    steps:
      # IMPORTANT: checkout the PR *head* branch, not the merge ref
      - name: Checkout PR head branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          persist-credentials: true  # use GITHUB_TOKEN for push

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"

      # Optional: make sure we know existing tags (harmless)
      - name: Fetch tags
        run: git fetch --tags --force

      - name: Bump version (patch, no tag)
        id: bump
        uses: callowayproject/bump-my-version@master
        env:
          # create a commit and push to the *current branch* (the PR head branch)
          BUMPVERSION_COMMIT: "true"
          BUMPVERSION_PUSH: "true"
          # ensure no tag is created from PRs
          BUMPVERSION_TAG: "false"
        with:
          args: "patch --no-tag"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Report version change as PR comment
        if: steps.bump.outputs.bumped == 'true'
        uses: actions/github-script@v7
        env:
          PREV: ${{ steps.bump.outputs.previous-version }}
          CURR: ${{ steps.bump.outputs.current-version }}
        with:
          script: |
            const pr = context.payload.pull_request.number;
            const prev = process.env.PREV || 'unknown';
            const curr = process.env.CURR || 'unknown';
            const body = `âœ… Version bumped from \`${prev}\` to \`${curr}\` on this PR branch.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body
            });
