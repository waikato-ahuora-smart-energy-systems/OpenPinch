# .github/workflows/ci-publish.yml
name: CI & Publish

on:
  push:
    branches: [ "main" ]
    paths-ignore: [ ".github/**", ".vscode/**" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e . pytest
      - name: Run tests
        run: pytest -q

  # bump-project-version:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Bump Python project version
  #       id: bump
    #     uses: callowayproject/bump-my-version@master
    #     env:
    #       BUMPVERSION_TAG: "true"
    #     with:
    #       args: "patch"
    #       github-token: ${{ secrets.GITHUB_TOKEN }}
      
    #   - name: Report version change
    #     if: steps.bump.outputs.bumped == 'true'
    #     run: |
    #       echo "Version was bumped from ${{ steps.bump.outputs.previous-version }} to ${{ steps.bump.outputs.current-version }}!"

    #   - name: Get commit hash
    #     id: commit
    #     run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    # outputs:
    #   bumped: ${{ steps.bump.outputs.bumped }}
    #   new_commit_hash: ${{ steps.commit.outputs.hash }}

  build:
    runs-on: ubuntu-latest
    needs: test #bump-project-version
    # if: needs.bump-project-version.outputs.bumped == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        # with:
        #   ref: ${{ needs.bump-project-version.outputs.new_commit_hash }}
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.12"
          cache: pip
      - name: Build sdist/wheel
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Upload dist as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: openpinch-dist
          path: dist/*

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for Trusted Publishing (even to TestPyPI)
      contents: read
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: openpinch-dist
          path: dist
      - name: Publish to TestPyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    needs: publish-testpypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/OpenPinch/
    permissions:
      id-token: write   # required for Trusted Publishing
      contents: read
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: openpinch-dist
          path: dist
      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
